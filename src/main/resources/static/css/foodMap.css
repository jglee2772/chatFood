<body>
<header>
  <h1>🍱 LunchBot 맛집 지도</h1>
  <p>AI가 내 주변 맛집을 찾아드릴게요</p>

  <div class="search-box">
    <input type="text" id="search-input" placeholder="예: 초밥, 돈까스, 파스타">
    <button id="search-btn">검색</button>
  </div>
</header>

<div class="header-images">
  <img src="/img/김치찌개.png" alt="김치찌개">
  <img src="/img/피자.png" alt="피자">
  <img src="/img/돈까스.png" alt="돈까스">
  <img src="/img/스테이크.png" alt="스테이크">
</div>

<div class="main-wrapper">
  <div class="upper-content">
    <div id="map"></div>
    <div class="map-title">📍 내 주변 맛집 탐색 중...</div>
    <div class="map-loading" id="map-loading">지도 불러오는 중...</div>
    <div class="map-overlay-card">
      <img src="/img/김치찌개.png" alt="추천">
      <span>AI가 추천하는 맛집을 탐색 중...</span>
      <button onclick="searchPlaces('맛집')">새로고침</button>
    </div>
  </div>

  <div class="right-side-content">
    <h3>AI 추천 맛집 TOP 3 🍜</h3>
    <div id="restaurant-list"></div>
    <div id="restaurant-detail"></div>
  </div>
</div>

<script src="//dapi.kakao.com/v2/maps/sdk.js?appkey=c7620c46bc5355020067ad99447e75f3&libraries=services"></script>
<script>
let map, userLocation = null, markers = [], infowindow = new kakao.maps.InfoWindow({ zIndex: 1 });

async function getUserLocation() {
  return new Promise((resolve) => {
    if (!navigator.geolocation) {
      userLocation = { lat: 37.5665, lng: 126.9780 };
      resolve();
      return;
    }
    navigator.geolocation.getCurrentPosition(
      (pos) => {
        userLocation = { lat: pos.coords.latitude, lng: pos.coords.longitude };
        resolve();
      },
      () => {
        userLocation = { lat: 37.5665, lng: 126.9780 };
        resolve();
      }
    );
  });
}

function initMap() {
  const center = new kakao.maps.LatLng(userLocation.lat, userLocation.lng);
  const container = document.getElementById("map");
  const options = { center, level: 5 };
  map = new kakao.maps.Map(container, options);

  const marker = new kakao.maps.Marker({ position: center, map });
  const info = new kakao.maps.InfoWindow({ content: '<div style="padding:5px;font-size:12px;">📍 내 위치</div>' });
  info.open(map, marker);

  document.getElementById("map-loading").style.display = "none";
  searchPlaces("맛집");
}

function searchPlaces(keyword) {
  clearMarkers();
  const ps = new kakao.maps.services.Places();
  const opt = {
    location: new kakao.maps.LatLng(userLocation.lat, userLocation.lng),
    radius: 2000,
    sort: kakao.maps.services.SortBy.DISTANCE,
  };
  ps.keywordSearch(keyword, placesSearchCB, opt);
}

function placesSearchCB(data, status) {
  if (status !== kakao.maps.services.Status.OK) {
    alert("검색 결과가 없습니다.");
    return;
  }

  const bounds = new kakao.maps.LatLngBounds();
  data.forEach((d) => bounds.extend(new kakao.maps.LatLng(d.y, d.x)));
  map.setBounds(bounds);

  displayTop3Restaurants(data);
  data.forEach(displayMarker);
}

function displayMarker(place) {
  const marker = new kakao.maps.Marker({
    map,
    position: new kakao.maps.LatLng(place.y, place.x),
  });
  markers.push(marker);
  kakao.maps.event.addListener(marker, "click", () => {
    infowindow.setContent(`<div style="padding:8px;font-size:12px;"><strong>${place.place_name}</strong><br>${place.road_address_name || place.address_name}</div>`);
    infowindow.open(map, marker);
  });
}

function clearMarkers() {
  markers.forEach((m) => m.setMap(null));
  markers = [];
  document.getElementById("restaurant-list").innerHTML = "";
  document.getElementById("restaurant-detail").style.display = "none";
}

function displayTop3Restaurants(places) {
  const list = document.getElementById("restaurant-list");
  list.innerHTML = "";

  const top3 = places.slice(0, 3);
  top3.forEach((p, i) => {
    const card = document.createElement("div");
    card.className = "restaurant-card";
    card.innerHTML = `
      <h4>${i + 1}위. ${p.place_name}</h4>
      <p>${p.road_address_name || p.address_name}</p>
      <p class="rating">⭐ ${(4 + Math.random()).toFixed(1)}</p>
    `;
    card.addEventListener("click", () => showDetail(p));
    list.appendChild(card);
  });
}

function showDetail(place) {
  const detail = document.getElementById("restaurant-detail");
  detail.style.display = "block";
  detail.innerHTML = `
    <h4>${place.place_name}</h4>
    <p>📍 주소: ${place.road_address_name || place.address_name}</p>
    <p>📞 전화번호: ${place.phone || "없음"}</p>
    <p>🏷 카테고리: ${place.category_name || "음식점"}</p>
    <p>🌐 거리: 약 ${(Math.random() * 1.5 + 0.3).toFixed(2)} km</p>
    <p>⭐ 평점: ${(4 + Math.random()).toFixed(1)}</p>
  `;
}

window.onload = async () => {
  await getUserLocation();
  initMap();

  const searchBtn = document.getElementById("search-btn");
  const searchInput = document.getElementById("search-input");
  searchBtn.addEventListener("click", () => {
    const keyword = searchInput.value.trim();
    if (keyword) searchPlaces(keyword);
    else alert("검색어를 입력해주세요!");
  });
  searchInput.addEventListener("keypress", (e) => {
    if (e.key === "Enter") {
      const keyword = searchInput.value.trim();
      if (keyword) searchPlaces(keyword);
      else alert("검색어를 입력해주세요!");
    }
  });
};
</script>
</body>
</html>